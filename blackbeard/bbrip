#!/usr/bin/perl
# bbrip (c) 2007-2008 nemesis, l.l.c.

use warnings;
use strict;

BEGIN {

    # NEMESIS_HOME was defined...
    if ( ( exists $ENV{NEMESIS_HOME} ) and ( -d $ENV{NEMESIS_HOME} . '/bb' ) ) {
        push @INC, $ENV{NEMESIS_HOME} . '/bb/lib';

        # the bb namespace required environment variable...
        $ENV{WE_LIKE_MOVIES} = $ENV{NEMESIS_HOME} . '/bb';
    }

    # BB_HOME was defined and overrides NEMESIS_HOME
    elsif ( ( exists $ENV{BB_HOME} ) and ( -d $ENV{BB_HOME} ) ) {
        push @INC, $ENV{BB_HOME} . '/lib';

        # the bb namespace required environment variable...
        $ENV{WE_LIKE_MOVIES} = $ENV{BB_HOME};
    }
    else {
        die "ERROR: You must set BB_HOME to the path of Blackbeard in your environment.\n";

    }
}

use Getopt::Long;
use Pod::Usage;
use Cwd qw/ realpath /;
use File::Copy;
use POSIX;

# load the bb namespace...
use BB;

# subroutine used for initial configuration...
sub init {

    # preamble...
    my %rip_obj;

    # objects / data-structures for bbrip...
    $rip_obj{options} = new Getopt::Long::Parser( config => ['no_ignore_case'] );
    $rip_obj{tools} = {};

    # welcome message for help / usage information...
    my $welcome = "\nbbrip (c) 2007-2008 nemesis, l.l.c.\n";

    # if no arguments have been passed, forward to help / usage pod...
    pod2usage($welcome) unless $ARGV[0];

    # command line options...
    $rip_obj{options}->getoptions(
        'title|t=i'   => \$rip_obj{options}->{title},
        'output|o=s'  => \$rip_obj{options}->{output},
        'chapter|c=s' => \$rip_obj{options}->{chapter},
        'angle|a=s'   => \$rip_obj{options}->{angle},
        'help|?|h'    => \$rip_obj{options}->{help},
    );

    # --help option...
    pod2usage($welcome) if defined $rip_obj{options}->{help};

    # --output option...
    unless (( defined $rip_obj{options}->{output} )
        and ( $rip_obj{options}->{output} =~ /\.vob$/x ) )
    {
        die "You must specify a valid output file using --output\n";
    }

    # --title option...
    if ( defined $rip_obj{options}->{title} ) {

        # a brief message...
        print "Gathering information from title $rip_obj{options}->{title}...\n";

        # extract dvd information...
        $rip_obj{tools} = new BB(
            input => 'dvd://' . $rip_obj{options}->{title},
            type  => 'mplayer',
            debug => 1,
        );

        # fully qualified input name...
        $rip_obj{options}->{input} = 'dvd://' . $rip_obj{options}->{title};
    }

    # no --title option...
    elsif ( not defined $rip_obj{options}->{title} ) {

        # a brief message...
        print "Gathering information from disc...\n";

        # extract dvd information...
        $rip_obj{tools} = new BB(
            input => 'dvd://1',
            type  => 'mplayer',
            debug => 0,
        );

        # determine the obvious movie title...
        my $title = $rip_obj{tools}->do_calc( longest_title => 1 );
        $rip_obj{options}->{input} = 'dvd://' . $title;

        # a brief message...
        print "Gathering information from title $title...\n";

        # kill the bb namespace and try again...
        $rip_obj{tools}->do_killbb();

        # extract dvd information once more...
        $rip_obj{tools} = new BB(
            input => $rip_obj{options}->{input},
            type  => 'mplayer',
            debug => 1,
        );
    }
    else {
        die "Either no disc could be read or the input/title you specified is invalid!\n";
    }

    # --chapter option...
    if ( defined $rip_obj{options}->{chapter} ) {
        
    }
    
    # --angle option...
    if ( defined $rip_obj{options}->{angle} ) {
        
    }
    
    # ok, let's get things started...
    run(%rip_obj);

}

# subroutine that makes this program useful...
sub run {

    # preamble...
    my %rip_obj = @_;

    # create a '.rip' information file...
    open my $rip_file, '>', 'tmp/rip_project.rip' or die "Unable to open .rip file: $!\n";

    # insert into the '.rip' file the contents of the 'identify' array...
    print $rip_file "$_ \n" foreach @{ $rip_obj{tools}->{identify} };
    close $rip_file;

    # a brief message...
    print "Please be patient, rip in progress...\n";

    # rip the requested dvd title...
    open my $cmd_line,

        # mplayer command line...
        "$rip_obj{tools}->{mplayer} \"$rip_obj{options}->{input}\" " . (

        # chapter to extract...
        defined $rip_obj{options}->{chapter} ? "-chapter $rip_obj{options}->{chapter} " : ''
        )
        . (

        # angle to extract...
        defined $rip_obj{options}->{angle} ? "-dvdangle $rip_obj{options}->{angle} " : ''
        )
        .

        # final stuff...
        '-dumpstream -dumpfile tmp/rip_project.vob 2> tmp/rip_trash |'
        or die "Unable to open command: $!\n";

    # show the output then close the file handle...
    print $_ while <$cmd_line>;
    close $cmd_line;

    # kill the bb namespace...
    $rip_obj{tools}->do_killbb();

    # return the newly created files to the current working directory...
    move "$ENV{WE_LIKE_MOVIES}/tmp/rip_project.vob", "$rip_obj{options}->{output}";
    move "$ENV{WE_LIKE_MOVIES}/tmp/rip_project.rip", "$rip_obj{options}->{output}.rip";

    # all done!
    return;

}

# bbrip start-point...
init();

__END__

=head1 SYNOPSIS

[-t 1] <-o file.vob> [options]

Options:

  -h, -?, --help  This help / usage screen...
  -t, --title     Title number on disc...
  -o, --output    Output file name...
  -c, --chapter   Chapters to use...
  -a, --angle     Angle to use...

Example: bbrip -o file.vob

=cut
